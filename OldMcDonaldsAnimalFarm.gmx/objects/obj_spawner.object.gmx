<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the enemy array and set the spawn timers
// the swarm count will depend on the level
swarms = 4 + (irandom_range(3,5) * global.game_level);
walker = 0;
animal_type_count = 9;
enemy_count = 0;
timer = 0;
time_between_swarms = 90;

randomize();

var i = 0;
repeat(swarms)
{
    switch (global.game_level)
    {
        case 1:
            swarm_count = irandom_range(5, 10);
            break;
        case 2:
            swarm_count = irandom_range(10, 20);
            break;
        case 3:
            swarm_count = irandom_range(20, 30);
            break;
        case 666:
            swarm_count = irandom_range(20, 30);
            break;
    }
    swarm_count = irandom_range(5, 10);
    enemy_count += swarm_count;
    
    repeat(enemy_count)
    {
        switch(irandom(8))
        {
            case 0:
                enemy_array[i] = obj_chicken;
                break;
            case 1:
                enemy_array[i] = obj_duck;
                break;
            case 2:
                enemy_array[i] = obj_pig;
                break;
            case 3:
                enemy_array[i] = obj_cow;
                break;
            case 4:
                enemy_array[i] = obj_goat;
                break;
            case 5:
                enemy_array[i] = obj_hog;
                break;
            case 6:
                enemy_array[i] = obj_horse;
                break;
            case 7:
                enemy_array[i] = obj_bull;
                break;
            case 8:
                enemy_array[i] = obj_goose;
                break;
        }
        i++;
    }
    
    enemy_array[i] = obj_break;
    i++;
}

// enemy release
alarm[0] = room_speed * 1.5;

// start timer
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer += 1;
alarm[2] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(walker &lt; array_length_1d(enemy_array))
    alarm[0] = room_speed * time_between_swarms;

walker++;
obj_player.attack_multiplier = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// throw out a new enemy
if( walker &lt; array_length_1d(enemy_array))
{
    if (enemy_array[walker] != obj_break)
    {
        instance_create(x, y, enemy_array[walker]);
        walker++;
        alarm[0] = room_speed * 1.5;
    }
    else
    {
        alarm[1] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
